swagger: '2.0'
info:
  description: BitWaves 后端接口文档
  version: 1.0.0
  title: BitWaves Web API Docs
  contact:
    email: msrlancern@126.com

tags:
  - name: users
    description: 用于访问用户数据的 API
  - name: auth
    description: 用于用户身份验证的 API

paths:
  /users:
    post:
      summary: 创建一个新用户
      description: 创建一个新用户
      tags:
        - users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            type: object
            required:
              - username
              - password
              - phone
            properties:
              username:
                description: 用户名，长度至少为3个字符
                type: string
                example: Lancern
              password:
                description: 密码，长度至少为6个字符
                type: string
                example: hello_world
              phone:
                description: 手机号，应由11个数字组成
                type: string
                example: "13901234567"
      responses:
        200:
          description: 操作成功完成
        400:
          description: 数据模型验证失败，响应的body中包含模型验证错误信息
        422:
          description: 数据模型有效，但在创建用户过程中出现了错误
          schema:
            type: object
            required:
              - errorCode
              - message
            properties:
              errorCode:
                description: 错误码
                type: integer
                example: 1
              message:
                description: 错误消息
                type: string
                example: 用户名冲突

  /users/{username}:
    get:
      summary: 获取用户信息
      description: 获取用户信息
      tags:
        - users
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: 用户名
        - in: query
          name: detailed
          type: boolean
          required: false
          description: 是否包含更加详细的信息，默认为 `false`
        - in: header
          name: Authorization
          type: string
          required: false
          description: 当 `detailed` 为 `true` 时，提供身份验证信息。内容格式应该为 `Jwt <jwt>`，注意 `Jwt` 与 `<jwt>` 之间的空格
      responses:
        200:
          description: 操作成功完成
          schema:
            type: object
            required:
              - username
              - nickname
              - phone
              - email
              - school
              - studentId
              - blogUrl
              - joinTime
              - totalSubmissions
              - totalAccepted
              - totalProblemsAttempted
              - totalProblemsAccepted
            properties:
              username:
                type: string
                description: 用户名
                example: Lancern
              nickname:
                type: string
                description: 用户昵称
                example: msr
              phone:
                type: string
                description: 当 `detailed` 为 `true` 时，本字段包含用户的手机号
                example: "13901234567"
              email:
                type: string
                description: 用户邮箱
                example: msr@bit.edu.cn
              school:
                type: string
                description: 用户的学校
                example: Beijing Institute of Technology
              studentId:
                type: string
                description: 当 `detailed` 为 `true` 时，本字段包含用户的学号
                example: "1120160123"
              blogUrl:
                type: string
                description: 用户的博客 URL
                example: https://lancern.github.io
              joinTime:
                type: string
                description: 用户加入 BITOJ 的时间，时区为 UTC 时区
                example: "2019-9-24T10:00:00"
              totalSubmissions:
                type: integer
                description: 用户总提交数量
                example: 10
              totalAccepted:
                type: integer
                description: 用户总 AC 提交数量
                example: 3
              totalProblemsAttempted:
                type: integer
                description: 用户总共尝试的题目数量
                example: 2
              totalProblemsAccepted:
                type: integer
                description: 用户总 AC 题目数量
                example: 1
        403:
          description: 参数 `detailed` 为 `true` 但提供的 JWT 无效
        404:
          description: 用户名未找到
    put:
      summary: 修改用户信息
      description: 修改用户信息
      tags:
        - users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          type: string
          required: true
          description: 用户名
        - in: header
          name: Authorization
          type: string
          required: true
          description: 提供身份验证信息。内容格式应该为 `Jwt <jwt>`，注意 `Jwt` 与 `<jwt>` 之间的空格
        - in: body
          name: data
          required: true
          description: 描述用户信息修改数据
          schema:
            properties:
              nickname:
                type: string
                description: 昵称，长度应大于 0。若不需要更改昵称，请不要提供该成员。
                example: "msr"
              phone:
                type: string
                description: 手机号码，包含 11 位数字。若不需要更改手机号，请不要提供该成员。
                example: "13701234567"
              email:
                type: string
                description: 电子邮箱。若不需要更改手机号，请不要提供该成员。
                example: "msr@bit.edu.cn"
              school:
                type: string
                description: 学校名称，包含至少 2 个字符。若不需要更改学校名称，请不要提供该成员。
                example: "Beijing Institute of Technology"
              studentId:
                type: string
                description: 学号，不应为空。若不需要更改学号，请不要提供该成员。
                example: "1120160001"
              blogUrl:
                type: string
                description: 用户博客 URL。若不需要更改此项，请不要提供该成员。
                example: "https://lancern.github.io"
      responses:
        200:
          description: 操作成功完成
        400:
          description: 数据模型验证失败
        403:
          description: 用户不具备相应的权限

  /users/ranklist:
    get:
      summary: 获取用户排名列表
      description: 获取用户排名列表
      tags:
        - users
      produces:
        - application/json
      parameters:
        - in: query
          name: by
          type: string
          required: true
          description: 排名依据
          enum:
            - TotalSubmissions
            - TotalAccepted
            - TotalProblemsAttempted
            - TotalProblemsAccepted
        - in: query
          name: limit
          type: integer
          required: false
          description: 要在排名中显示的用户数量，默认为 20
      responses:
        200:
          description: 操作成功完成
          schema:
            type: array
            items:
              type: object
              required:
                - username
                - joinTime
                - totalSubmissions
                - totalAccepted
                - totalProblemsAttempted
                - totalProblemsAccepted
              properties:
                username:
                  type: string
                  description: 用户名
                  example: Lancern
                joinTime:
                  type: string
                  description: 用户加入 BITOJ 的时间，时区为 UTC 时区
                  example: "2019-9-24T10:00:00"
                totalSubmissions:
                  type: integer
                  description: 用户总提交数量
                  example: 10
                totalAccepted:
                  type: integer
                  description: 用户总 AC 提交数量
                  example: 3
                totalProblemsAttempted:
                  type: integer
                  description: 用户总共尝试的题目数量
                  example: 2
                totalProblemsAccepted:
                  type: integer
                  description: 用户总 AC 题目数量
                  example: 1
        400:
          description: 无效的查询参数

  /auth:
    post:
      summary: 创建用户身份验证标识
      tags:
        - auth
      description: 创建用户身份验证标识
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                description: 用户名
                example: Lancern
              password:
                type: string
                description: 密码
                example: "hello_world"
      responses:
        200:
          description: 操作成功完成
          schema:
            type: object
            required:
              - username
              - isAdmin
              - jwt
            properties:
              username:
                type: string
                description: 用户名
                example: Lancern
              isAdmin:
                type: boolean
                description: 用户是否为管理员
                example: true
              jwt:
                type: string
                description: 编码用户身份验证信息的 JWT
        400:
          description: 数据模型验证失败
        422:
          description: 数据模型验证成功，但在执行用户身份验证时出现错误
          schema:
            type: object
            required:
              - errorCode
              - message
            properties:
              errorCode:
                type: integer
                description: 错误代码
                example: 1
              message:
                type: string
                description: 错误消息
                example: 用户不存在
